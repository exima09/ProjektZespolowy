security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        entity_provider:
            entity:
                class: App\Entity\User
                property: username
    role_hierarchy:
        ROLE_ADMIN: [IS_AUTHENTICATED_FULLY, ROLE_WARDEN]
        ROLE_WARDEN: [ROLE_EXECUTIONER, ROLE_SOCIAL, ROLE_MEDICAL, ROLE_PRISON_GUARD, ROLE_MANAGER, ROLE_USER]
        ROLE_MANAGER: [ROLE_USER]
        ROLE_EXECUTIONER: [ROLE_PRISON_GUARD, ROLE_USER]
        ROLE_SOCIAL: ROLE_USER
        ROLE_MEDICAL: ROLE_USER
        ROLE_PRISON_GUARD: ROLE_USER
    firewalls:
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern:  ^/api/register
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/register_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        application:
            pattern:  ^/api/application
            stateless: true
            anonymous: true
        doc:
            pattern:  ^/api/doc
            stateless: true
            anonymous: true
        docs:
            pattern:  ^/api/docs
            stateless: true
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: true

              # activate different ways to authenticate

              # http_basic: true
              # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

              # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/application, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/alarm, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/prisoner,       roles: ROLE_PRISON_GUARD }
        - { path: ^/api,       roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
